package View;

import Controller.MedicineController;
import Model.MedicineModel;
import java.awt.HeadlessException;
import java.sql.SQLException;
import java.util.List;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;

public class MedicinesView extends javax.swing.JFrame {

    private javax.swing.JFrame parent;
    private String userCode;
    private String userRole;
    private int currentPage = 1;
    private final int rowsPerPage = 10;
    private int totalRecords = 0;
    private MedicineController controller;

    public MedicinesView(javax.swing.JFrame parent, String userCode, String userRole) {
        this.parent = parent;
        this.userCode = userCode;
        this.userRole = userRole;
        this.controller = new MedicineController();
        initComponents();
        loadTotalRecords();
        loadMedicinesData(currentPage);
        setLocationRelativeTo(null);
        updatePaginationButtons();

    }

    private void loadTotalRecords() {
        try {
            totalRecords = controller.getTotalMedicines();
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Lỗi khi đếm số thuốc!");
        }
    }

    private void loadMedicinesData(int page) {
        try {
            List<MedicineModel> medicines = controller.getMedicinesByPage(page, rowsPerPage);

            if (medicines.isEmpty() && page > 1) {
                currentPage--;
                JOptionPane.showMessageDialog(this, "Không còn dữ liệu để hiển thị.");
                return;
            }

            // Lấy model và reset bảng
            DefaultTableModel model = (DefaultTableModel) display_thuoc.getModel();
            model.setRowCount(0);

            // Thêm từng dòng thuốc vào bảng
            for (MedicineModel medicine : medicines) {
                model.addRow(new Object[]{
                    medicine.getMedicineName(),
                    medicine.getUnit(),
                    medicine.getQuantity(),
                    String.format("%.2f", medicine.getPrice())
                });
            }

            // Căn giữa nội dung cột
            DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
            centerRenderer.setHorizontalAlignment(JLabel.CENTER);

            for (int i = 0; i < display_thuoc.getColumnCount(); i++) {
                display_thuoc.getColumnModel().getColumn(i).setCellRenderer(centerRenderer);
            }

            // Cập nhật trạng thái nút phân trang
            updatePaginationButtons();

        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Lỗi khi tải danh sách thuốc!");
            e.printStackTrace();
        }
    }

    private void updatePaginationButtons() {
        int totalPages = (int) Math.ceil((double) totalRecords / rowsPerPage);

        btn_first.setEnabled(currentPage > 1);
        btn_back.setEnabled(currentPage > 1);

        btn_next.setEnabled(currentPage < totalPages);
        btn_last.setEnabled(currentPage < totalPages);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btn_check_sl1 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        lb_gia_tien = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        btn_delete = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        btn_check_sl = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        btn_add = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        lb_thuoc_name = new javax.swing.JTextField();
        lb_don_vi = new javax.swing.JTextField();
        lb_so_luong = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        display_thuoc = new javax.swing.JTable();
        btn_search = new javax.swing.JButton();
        btn_back = new javax.swing.JButton();
        btn_next = new javax.swing.JButton();
        btn_last = new javax.swing.JButton();
        btn_first = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();

        btn_check_sl1.setBackground(new java.awt.Color(0, 153, 255));
        btn_check_sl1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btn_check_sl1.setText("Kiểm tra số lượng");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel2.setText("Tên thuốc");

        btn_delete.setBackground(new java.awt.Color(0, 153, 255));
        btn_delete.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btn_delete.setText("Xóa thuốc");
        btn_delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_deleteActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel3.setText("Đơn vị");

        btn_check_sl.setBackground(new java.awt.Color(0, 153, 255));
        btn_check_sl.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btn_check_sl.setText("Kiểm tra sl");
        btn_check_sl.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_check_slActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel4.setText("Số lượng");

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel5.setText("Giá tiền");

        btn_add.setBackground(new java.awt.Color(0, 153, 255));
        btn_add.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btn_add.setText("Thêm thuốc");
        btn_add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_addActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        jLabel1.setText("KHO THUỐC");

        display_thuoc.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Tên thuốc", "Giá tiền", "Đơn vị", "Số lượng"
            }
        ));
        jScrollPane1.setViewportView(display_thuoc);

        btn_search.setBackground(new java.awt.Color(0, 153, 255));
        btn_search.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btn_search.setText("Tìm thuốc");
        btn_search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_searchActionPerformed(evt);
            }
        });

        btn_back.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btn_back.setText("<");
        btn_back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_backActionPerformed(evt);
            }
        });

        btn_next.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btn_next.setText(">");
        btn_next.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_nextActionPerformed(evt);
            }
        });

        btn_last.setText("Cuối");
        btn_last.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_lastActionPerformed(evt);
            }
        });

        btn_first.setText("Đầu");
        btn_first.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_firstActionPerformed(evt);
            }
        });

        jButton1.setBackground(new java.awt.Color(51, 153, 255));
        jButton1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jButton1.setText("<");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(lb_gia_tien, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lb_thuoc_name, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(35, 35, 35)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel4)
                            .addComponent(jLabel3)
                            .addComponent(lb_so_luong, javax.swing.GroupLayout.DEFAULT_SIZE, 134, Short.MAX_VALUE)
                            .addComponent(lb_don_vi))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btn_delete, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btn_add, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btn_search, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btn_check_sl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(48, 48, 48))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(0, 573, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(189, 189, 189)
                                .addComponent(btn_first)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btn_back)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btn_next)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btn_last))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 617, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel1)
                        .addGap(160, 160, 160)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(24, 24, 24))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jButton1))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btn_search, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btn_add, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btn_check_sl, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btn_delete, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3))
                        .addGap(5, 5, 5)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(lb_thuoc_name, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE)
                            .addComponent(lb_don_vi))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lb_gia_tien, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lb_so_luong, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 17, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 233, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_back)
                    .addComponent(btn_next)
                    .addComponent(btn_last)
                    .addComponent(btn_first))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_addActionPerformed
        String name = lb_thuoc_name.getText().trim();
        String unit = lb_don_vi.getText().trim();
        String quantityStr = lb_so_luong.getText().trim();
        String priceStr = lb_gia_tien.getText().trim();

        if (name.isEmpty() || unit.isEmpty() || quantityStr.isEmpty() || priceStr.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Vui lòng nhập đầy đủ thông tin thuốc.");
            return;
        }

        try {
            int quantity = Integer.parseInt(quantityStr);
            double price = Double.parseDouble(priceStr);

            MedicineModel med = new MedicineModel(0, name, unit, quantity, price);
            boolean success = controller.addMedicine(med);

            if (success) {
                JOptionPane.showMessageDialog(this, "Thêm thuốc thành công!");
                loadTotalRecords();
                loadMedicinesData(currentPage);
                lb_thuoc_name.setText("");
                lb_don_vi.setText("");
                lb_so_luong.setText("");
                lb_gia_tien.setText("");
            } else {
                JOptionPane.showMessageDialog(this, "Thêm thuốc thất bại!");
            }
        } catch (NumberFormatException | SQLException ex) {
            JOptionPane.showMessageDialog(this, "Lỗi: " + ex.getMessage());
        }
    }//GEN-LAST:event_btn_addActionPerformed

    private void btn_deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_deleteActionPerformed
        String name = lb_thuoc_name.getText().trim();
        if (name.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Vui lòng nhập tên thuốc để xoá.");
            return;
        }

        int confirm = JOptionPane.showConfirmDialog(this, "Bạn có chắc chắn muốn xoá thuốc này?", "Xác nhận", JOptionPane.YES_NO_OPTION);
        if (confirm == JOptionPane.YES_OPTION) {
            try {
                boolean deleted = controller.deleteMedicine(name);
                if (deleted) {
                    JOptionPane.showMessageDialog(this, "Đã xoá thuốc.");
                    loadTotalRecords();
                    loadMedicinesData(currentPage);

                    // Reset input
                    lb_thuoc_name.setText("");
                    lb_don_vi.setText("");
                    lb_so_luong.setText("");
                    lb_gia_tien.setText("");
                } else {
                    JOptionPane.showMessageDialog(this, "Không tìm thấy hoặc không xoá được thuốc.");
                }
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(this, "Lỗi khi xoá thuốc: " + ex.getMessage());
            }
        }
    }//GEN-LAST:event_btn_deleteActionPerformed

    private void btn_check_slActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_check_slActionPerformed
        try {
            List<MedicineModel> lowStockList = controller.getLowStockMedicines(10);
            if (lowStockList.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Tất cả thuốc đều đủ số lượng.");
            } else {
                StringBuilder message = new StringBuilder("Các thuốc dưới 10 đơn vị:\n");
                for (MedicineModel med : lowStockList) {
                    message.append("- ").append(med.getMedicineName())
                            .append(" (SL: ").append(med.getQuantity()).append(")\n");
                }
                JOptionPane.showMessageDialog(this, message.toString());
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Lỗi khi kiểm tra số lượng: " + ex.getMessage());
        }
    }//GEN-LAST:event_btn_check_slActionPerformed

    private void btn_searchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_searchActionPerformed
        String name = lb_thuoc_name.getText().trim();

        if (name.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Vui lòng nhập tên thuốc để tìm.");
            return;
        }

        try {
            MedicineModel medicine = controller.getMedicineByName(name);

            DefaultTableModel model = (DefaultTableModel) display_thuoc.getModel();
            model.setRowCount(0); // Xoá dữ liệu cũ

            if (medicine != null) {
                // Hiển thị thông tin vào các ô
                lb_don_vi.setText(medicine.getUnit());
                lb_so_luong.setText(String.valueOf(medicine.getQuantity()));
                lb_gia_tien.setText(String.format("%.2f", medicine.getPrice()));

                // Thêm dòng vào bảng
                model.addRow(new Object[]{
                    medicine.getMedicineName(),
                    medicine.getUnit(),
                    medicine.getQuantity(),
                    String.format("%.2f", medicine.getPrice())
                });

                // Căn giữa lại cột
                DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
                centerRenderer.setHorizontalAlignment(JLabel.CENTER);
                for (int i = 0; i < display_thuoc.getColumnCount(); i++) {
                    display_thuoc.getColumnModel().getColumn(i).setCellRenderer(centerRenderer);
                }

            } else {
                JOptionPane.showMessageDialog(this, "Không tìm thấy thuốc!");
            }

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Lỗi khi tìm thuốc: " + ex.getMessage());
            ex.printStackTrace();
        }
    }//GEN-LAST:event_btn_searchActionPerformed

    private void btn_backActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_backActionPerformed
        if (currentPage > 1) {
            currentPage--;
            loadMedicinesData(currentPage);
        }
    }//GEN-LAST:event_btn_backActionPerformed

    private void btn_firstActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_firstActionPerformed
        if (currentPage != 1) {
            currentPage = 1;
            loadMedicinesData(currentPage);
        }
    }//GEN-LAST:event_btn_firstActionPerformed

    private void btn_nextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_nextActionPerformed
        int totalPages = (int) Math.ceil((double) totalRecords / rowsPerPage);
        if (currentPage < totalPages) {
            currentPage++;
            loadMedicinesData(currentPage);
        }
    }//GEN-LAST:event_btn_nextActionPerformed

    private void btn_lastActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_lastActionPerformed
        int totalPages = (int) Math.ceil((double) totalRecords / rowsPerPage);
        if (currentPage != totalPages) {
            currentPage = totalPages;
            loadMedicinesData(currentPage);
        }
    }//GEN-LAST:event_btn_lastActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        this.dispose(); // Close the current add_benhnhan window
        if (parent != null) {
            parent.setVisible(true); // Show the parent window (benhnhan_manage)
        } else {
            // Fallback: Open a new benhnhan_manage window with userCode and userRole
            new PatientView(null, userCode, userRole).setVisible(true);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MedicinesView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MedicinesView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MedicinesView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MedicinesView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_add;
    private javax.swing.JButton btn_back;
    private javax.swing.JButton btn_check_sl;
    private javax.swing.JButton btn_check_sl1;
    private javax.swing.JButton btn_delete;
    private javax.swing.JButton btn_first;
    private javax.swing.JButton btn_last;
    private javax.swing.JButton btn_next;
    private javax.swing.JButton btn_search;
    private javax.swing.JTable display_thuoc;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField lb_don_vi;
    private javax.swing.JTextField lb_gia_tien;
    private javax.swing.JTextField lb_so_luong;
    private javax.swing.JTextField lb_thuoc_name;
    // End of variables declaration//GEN-END:variables
}
