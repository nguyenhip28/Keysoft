package View;

import Controller.LetanController;
import Model.AppointmentModel;
import Controller.PermissionController;
import java.util.List;
import java.util.Map;
import javax.swing.JOptionPane;

public class letan extends javax.swing.JFrame {

    private String userCode;
    private LetanController controller;

    private List<String> currentPermissions;
    private int currentPage = 1;
    private int pageSize = 5;
    private int totalRecords = 0;

    public letan(String userCode) {
        this.userCode = userCode;
        this.controller = new LetanController(userCode);
        initComponents();
        loadPermissions();
        loadAppointmentsByPage(currentPage);
        setLocationRelativeTo(null);
    }

    private void loadAppointmentsByPage(int page) {
        try {
            totalRecords = controller.getTotalAppointments();
            List<AppointmentModel> appointments = controller.getAppointmentsByPage(page, pageSize);

            display_lichhen.setText("");

            for (AppointmentModel appointment : appointments) {
                String appointmentInfo = "Mã BN: " + appointment.getPatientCode()
                        + "\nBệnh nhân: " + appointment.getFullName()
                        + "\nNgày: " + appointment.getAppointmentDate()
                        + "\nGiờ: " + appointment.getAppointmentTime()
                        + "\nTriệu chứng: " + appointment.getSymptoms()
                        + "\n------------------------\n";

                display_lichhen.append(appointmentInfo);
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Lỗi khi truy vấn lịch hẹn: " + ex.getMessage());
        }
    }

    private void loadPermissions() {
        cb_choose.removeAllItems();
        currentPermissions = PermissionController.getPermissionsByUserCode(userCode);

        if (currentPermissions.isEmpty()) {
            cb_choose.addItem("Không có quyền nào được cấp");
            cb_choose.setEnabled(false);
        } else {
            cb_choose.setEnabled(true);
            for (String perm : currentPermissions) {
                cb_choose.addItem(perm);
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        btn_refresh = new javax.swing.JButton();
        cb_choose = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        btn_choose = new javax.swing.JButton();
        btn_logout = new javax.swing.JButton();
        btn_previous = new javax.swing.JButton();
        btn_next = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        display_lichhen = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 0, 0));
        jLabel2.setText("LỊCH HẸN");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 80, -1, 30));

        btn_refresh.setBackground(new java.awt.Color(0, 153, 255));
        btn_refresh.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btn_refresh.setText("Refresh");
        btn_refresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_refreshActionPerformed(evt);
            }
        });
        getContentPane().add(btn_refresh, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 80, -1, 30));

        cb_choose.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        getContentPane().add(cb_choose, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 80, 222, 34));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("LỄ TÂN");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 20, 130, 36));

        btn_choose.setBackground(new java.awt.Color(0, 153, 255));
        btn_choose.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btn_choose.setForeground(new java.awt.Color(255, 255, 255));
        btn_choose.setText("Tiếp tục");
        btn_choose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_chooseActionPerformed(evt);
            }
        });
        getContentPane().add(btn_choose, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 80, -1, 34));

        btn_logout.setBackground(new java.awt.Color(204, 0, 0));
        btn_logout.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btn_logout.setForeground(new java.awt.Color(255, 255, 255));
        btn_logout.setText("Logout");
        btn_logout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_logoutActionPerformed(evt);
            }
        });
        getContentPane().add(btn_logout, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 20, 94, 33));

        btn_previous.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btn_previous.setText("<");
        btn_previous.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_previousActionPerformed(evt);
            }
        });
        getContentPane().add(btn_previous, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 90, 45, -1));

        btn_next.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btn_next.setText(">");
        btn_next.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_nextActionPerformed(evt);
            }
        });
        getContentPane().add(btn_next, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 90, 46, -1));

        display_lichhen.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(display_lichhen);

        getContentPane().add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 120, 620, 280));

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/View/benhvien.jpg"))); // NOI18N
        jLabel3.setFocusable(false);
        jLabel3.setInheritsPopupMenu(false);
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 650, 410));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_refreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_refreshActionPerformed
        loadAppointmentsByPage(currentPage);
    }//GEN-LAST:event_btn_refreshActionPerformed

    private void btn_logoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_logoutActionPerformed
        int confirm = JOptionPane.showConfirmDialog(this, "Bạn có chắc chắn muốn đăng xuất?", "Xác nhận", JOptionPane.YES_NO_OPTION);
        if (confirm == JOptionPane.YES_OPTION) {
            this.setVisible(false);
            new login().setVisible(true);
        }
    }//GEN-LAST:event_btn_logoutActionPerformed

    private void btn_chooseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_chooseActionPerformed
        int selectedIndex = cb_choose.getSelectedIndex();

        if (currentPermissions == null || currentPermissions.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Bạn không có quyền nào được cấp.");
            return;
        }

        if (selectedIndex < 0 || selectedIndex >= currentPermissions.size()) {
            JOptionPane.showMessageDialog(this, "Vui lòng chọn quyền hợp lệ.");
            return;
        }

        String selectedPermission = currentPermissions.get(selectedIndex);

        switch (selectedPermission) {
            case "Quản lý lịch hẹn" -> {
                this.setVisible(false);
                new AppointmentView(this, userCode, "letan").setVisible(true);
            }
            case "Quản lý bệnh nhân" -> {
                this.setVisible(false);
                new PatientView(this, userCode, "letan").setVisible(true);
            }
            default ->
                JOptionPane.showMessageDialog(this, "Quyền chưa được hỗ trợ.");
        }
    }//GEN-LAST:event_btn_chooseActionPerformed

    private void btn_previousActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_previousActionPerformed
        if (currentPage > 1) {
            currentPage--;
            loadAppointmentsByPage(currentPage);
        }
    }//GEN-LAST:event_btn_previousActionPerformed

    private void btn_nextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_nextActionPerformed
        int totalPages = (int) Math.ceil((double) totalRecords / pageSize);
        if (currentPage < totalPages) {
            currentPage++;
            loadAppointmentsByPage(currentPage);
        }
    }//GEN-LAST:event_btn_nextActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(letan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(letan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(letan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(letan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_choose;
    private javax.swing.JButton btn_logout;
    private javax.swing.JButton btn_next;
    private javax.swing.JButton btn_previous;
    private javax.swing.JButton btn_refresh;
    private javax.swing.JComboBox<String> cb_choose;
    private javax.swing.JTable display_lichhen;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane2;
    // End of variables declaration//GEN-END:variables

}
