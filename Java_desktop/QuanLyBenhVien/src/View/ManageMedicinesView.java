package View;

import Controller.MedicineController;
import Model.MedicineModel;
import java.awt.HeadlessException;
import java.sql.SQLException;
import java.util.List;
import javax.swing.JOptionPane;

public class ManageMedicinesView extends javax.swing.JFrame {

    private javax.swing.JFrame parent;
    private String userCode;
    private String userRole;
    private int currentPage = 1;
    private final int rowsPerPage = 5;
    private int totalRecords = 0;
    private MedicineController controller;

    public ManageMedicinesView(javax.swing.JFrame parent, String userCode, String userRole) {
        this.parent = parent;
        this.userCode = userCode;
        this.userRole = userRole;
        this.controller = new MedicineController();
        initComponents();
        loadTotalRecords();
        loadMedicinesData(currentPage);
        setLocationRelativeTo(null);

    }

    private void loadTotalRecords() {
        try {
            totalRecords = controller.getTotalMedicines();
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Lỗi khi đếm số thuốc!");
        }
    }

    private void loadMedicinesData(int page) {
        display_thuoc.setText("");

        try {
            List<MedicineModel> medicines = controller.getMedicinesByPage(page, rowsPerPage);

            if (medicines.isEmpty() && page > 1) {
                currentPage--;
                JOptionPane.showMessageDialog(this, "Không còn dữ liệu để hiển thị.");
                return;
            }

            for (MedicineModel medicine : medicines) {
                display_thuoc.append(String.format(
                        "ID: %d\nTên thuốc: %s\nĐơn vị: %s\nSố lượng: %d\nGiá tiền: %.2f\n-----------------------\n",
                        medicine.getMedicineId(),
                        medicine.getMedicineName(),
                        medicine.getUnit(),
                        medicine.getQuantity(),
                        medicine.getPrice()
                ));
            }
        } catch (HeadlessException | SQLException e) {
            JOptionPane.showMessageDialog(this, "Lỗi khi tải danh sách thuốc!");
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        lb_thuoc_name = new javax.swing.JTextField();
        lb_don_vi = new javax.swing.JTextField();
        lb_so_luong = new javax.swing.JTextField();
        lb_gia_tien = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        btn_add = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        display_thuoc = new javax.swing.JTextArea();
        jLabel6 = new javax.swing.JLabel();
        btn_refresh = new javax.swing.JButton();
        lb_thuoc_input = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        btn_delete = new javax.swing.JButton();
        btn_check_sl = new javax.swing.JButton();
        btn_back = new javax.swing.JButton();
        btn_previous = new javax.swing.JButton();
        btn_next = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("KHO THUỐC");
        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N

        jLabel2.setText("Tên thuốc");
        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N

        jLabel3.setText("Đơn vị");
        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N

        jLabel4.setText("Số lượng");
        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N

        jLabel5.setText("Giá tiền");
        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N

        btn_add.setText("Thêm thuốc");
        btn_add.setBackground(new java.awt.Color(0, 153, 255));
        btn_add.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btn_add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_addActionPerformed(evt);
            }
        });

        display_thuoc.setColumns(20);
        display_thuoc.setRows(5);
        jScrollPane1.setViewportView(display_thuoc);

        jLabel6.setText("Danh sách");
        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N

        btn_refresh.setText("Refresh");
        btn_refresh.setBackground(new java.awt.Color(0, 153, 255));
        btn_refresh.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btn_refresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_refreshActionPerformed(evt);
            }
        });

        jLabel7.setText("Điền tên thuốc");
        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N

        btn_delete.setText("Xóa thuốc");
        btn_delete.setBackground(new java.awt.Color(0, 153, 255));
        btn_delete.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btn_delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_deleteActionPerformed(evt);
            }
        });

        btn_check_sl.setText("Kiểm tra số lượng");
        btn_check_sl.setBackground(new java.awt.Color(0, 153, 255));
        btn_check_sl.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btn_check_sl.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_check_slActionPerformed(evt);
            }
        });

        btn_back.setText("Back");
        btn_back.setBackground(new java.awt.Color(0, 153, 255));
        btn_back.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btn_back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_backActionPerformed(evt);
            }
        });

        btn_previous.setText("<");
        btn_previous.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btn_previous.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_previousActionPerformed(evt);
            }
        });

        btn_next.setText(">");
        btn_next.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btn_next.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_nextActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lb_thuoc_name, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lb_gia_tien, javax.swing.GroupLayout.DEFAULT_SIZE, 190, Short.MAX_VALUE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lb_don_vi, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lb_so_luong, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel4)))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(lb_thuoc_input, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(btn_delete, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jLabel7)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(94, 94, 94)
                                        .addComponent(btn_add, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 49, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(jLabel1)))
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 292, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(btn_check_sl)
                            .addGap(78, 78, 78))
                        .addComponent(btn_back, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_refresh)
                        .addGap(32, 32, 32)
                        .addComponent(btn_previous, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_next, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(36, 36, 36))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(45, 45, 45)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lb_thuoc_name, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addGap(5, 5, 5)
                                .addComponent(lb_don_vi, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addGap(1, 1, 1)
                                .addComponent(lb_so_luong, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addGap(1, 1, 1)
                                .addComponent(lb_gia_tien, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addComponent(btn_add, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(41, 41, 41)
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lb_thuoc_input, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btn_delete, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(89, 89, 89))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btn_back, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(37, 37, 37)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btn_refresh)
                            .addComponent(btn_previous)
                            .addComponent(btn_next))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 289, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_check_sl, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(17, 17, 17))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_addActionPerformed
        String name = lb_thuoc_name.getText().trim();
        String unit = lb_don_vi.getText().trim();
        String quantityStr = lb_so_luong.getText().trim();
        String priceStr = lb_gia_tien.getText().trim();

        if (name.isEmpty() || unit.isEmpty() || quantityStr.isEmpty() || priceStr.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Vui lòng nhập đầy đủ thông tin!");
            return;
        }

        try {
            MedicineModel medicine = new MedicineModel();
            medicine.setMedicineName(name);
            medicine.setUnit(unit);
            medicine.setQuantity(Integer.parseInt(quantityStr));
            medicine.setPrice(Double.parseDouble(priceStr));

            boolean success = controller.addMedicine(medicine);

            if (success) {
                JOptionPane.showMessageDialog(this, "Thêm thuốc thành công!");
                display_thuoc.append(String.format(
                        "ID: %d\nTên thuốc: %s\nĐơn vị: %s\nSố lượng: %d\nGiá tiền: %.2f\n-----------------------\n",
                        medicine.getMedicineId(),
                        medicine.getMedicineName(),
                        medicine.getUnit(),
                        medicine.getQuantity(),
                        medicine.getPrice()
                ));

                // Clear input fields
                lb_thuoc_name.setText("");
                lb_don_vi.setText("");
                lb_so_luong.setText("");
                lb_gia_tien.setText("");

                // Refresh total records
                loadTotalRecords();
            } else {
                JOptionPane.showMessageDialog(this, "Thêm thuốc thất bại!");
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Số lượng hoặc giá tiền không hợp lệ!");
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Lỗi khi thêm thuốc vào cơ sở dữ liệu!");
        }
    }//GEN-LAST:event_btn_addActionPerformed

    private void btn_refreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_refreshActionPerformed
        loadTotalRecords();
        currentPage = 1;
        loadMedicinesData(currentPage);
    }//GEN-LAST:event_btn_refreshActionPerformed

    private void btn_deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_deleteActionPerformed
        String nameToDelete = lb_thuoc_input.getText().trim();

        if (nameToDelete.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Vui lòng nhập tên thuốc cần xóa!");
            return;
        }

        int confirm = JOptionPane.showConfirmDialog(
                this,
                "Bạn có chắc chắn muốn xóa thuốc \"" + nameToDelete + "\" không?",
                "Xác nhận xóa",
                JOptionPane.YES_NO_OPTION
        );

        if (confirm != JOptionPane.YES_OPTION) {
            return;
        }

        try {
            boolean deleted = controller.deleteMedicine(nameToDelete);

            if (deleted) {
                JOptionPane.showMessageDialog(this, "Đã xóa thuốc \"" + nameToDelete + "\" thành công!");
                lb_thuoc_input.setText("");

                // Check if table is empty to reset auto increment
                if (controller.getTotalMedicines() == 0) {
                    controller.resetAutoIncrement();
                }

                // Refresh data
                btn_refreshActionPerformed(evt);
            } else {
                JOptionPane.showMessageDialog(this, "Không tìm thấy thuốc tên \"" + nameToDelete + "\"!");
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Lỗi khi xóa thuốc khỏi cơ sở dữ liệu!");
        }

    }//GEN-LAST:event_btn_deleteActionPerformed

    private void btn_check_slActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_check_slActionPerformed
        display_thuoc.setText("");

        try {
            List<MedicineModel> lowStockMedicines = controller.getLowStockMedicines(10);

            if (lowStockMedicines.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Tất cả thuốc đều còn đủ số lượng!", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
                return;
            }

            StringBuilder warning = new StringBuilder("Các thuốc sắp hết hàng (số lượng < 10):\n");
            for (MedicineModel medicine : lowStockMedicines) {
                warning.append(String.format(
                        "ID: %d\nTên thuốc: %s\nĐơn vị: %s\nSố lượng: %d\nGiá tiền: %.2f\n-----------------------\n",
                        medicine.getMedicineId(),
                        medicine.getMedicineName(),
                        medicine.getUnit(),
                        medicine.getQuantity(),
                        medicine.getPrice()
                ));
            }

            JOptionPane.showMessageDialog(this, warning.toString(), "Cảnh báo", JOptionPane.WARNING_MESSAGE);
            display_thuoc.setText(warning.toString());
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Lỗi khi kiểm tra số lượng thuốc!", "Lỗi", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btn_check_slActionPerformed

    private void btn_backActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_backActionPerformed
        this.dispose(); // đóng cửa sổ hiện tại
        if (parent != null) {
            parent.setVisible(true); // mở lại form letan
        }

        switch (userRole.toLowerCase()) {
            case "admin" -> {
                if (parent != null) {
                    parent.setVisible(true);
                } else {
                    new AdminView(userCode).setVisible(true);
                }
            }

            case "doctor" -> {
                if (parent != null) {
                    parent.setVisible(true);
                } else {
                    new DoctorView(userCode).setVisible(true);
                }
            }

            case "letan" -> {
                if (parent != null) {
                    parent.setVisible(true);
                } else {
                    new LetanView(userCode).setVisible(true);
                }
            }
            default -> {
                if (parent != null) {
                    parent.setVisible(true);
                }
            }
        }
    }//GEN-LAST:event_btn_backActionPerformed

    private void btn_previousActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_previousActionPerformed
        if (currentPage > 1) {
            currentPage--;
            loadMedicinesData(currentPage);
        } else {
            javax.swing.JOptionPane.showMessageDialog(this, "Đã là trang đầu tiên.");
        }
    }//GEN-LAST:event_btn_previousActionPerformed

    private void btn_nextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_nextActionPerformed
        int totalPages = (int) Math.ceil((double) totalRecords / rowsPerPage);
        if (currentPage < totalPages) {
            currentPage++;
            loadMedicinesData(currentPage);
        } else {
            javax.swing.JOptionPane.showMessageDialog(this, "Đã là trang cuối cùng.");
        }
    }//GEN-LAST:event_btn_nextActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ManageMedicinesView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ManageMedicinesView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ManageMedicinesView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ManageMedicinesView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_add;
    private javax.swing.JButton btn_back;
    private javax.swing.JButton btn_check_sl;
    private javax.swing.JButton btn_delete;
    private javax.swing.JButton btn_next;
    private javax.swing.JButton btn_previous;
    private javax.swing.JButton btn_refresh;
    private javax.swing.JTextArea display_thuoc;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField lb_don_vi;
    private javax.swing.JTextField lb_gia_tien;
    private javax.swing.JTextField lb_so_luong;
    private javax.swing.JTextField lb_thuoc_input;
    private javax.swing.JTextField lb_thuoc_name;
    // End of variables declaration//GEN-END:variables
}
