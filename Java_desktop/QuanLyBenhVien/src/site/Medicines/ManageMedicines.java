package site.Medicines;

import java.awt.HeadlessException;
import java.sql.Connection;
import java.sql.SQLException;
import javax.swing.table.DefaultTableModel;
import site.UserRole.admin;
import site.UserRole.doctor;
import site.UserRole.letan;

/**
 *
 * @author Vu Nguyen
 */
public class ManageMedicines extends javax.swing.JFrame {

    private javax.swing.JFrame parent;
    private String userCode;
    private String userRole;

    public ManageMedicines() {
        initComponents();
    }

    public ManageMedicines(javax.swing.JFrame parent, String userCode, String userRole) {
        this.parent = parent;
        this.userCode = userCode;
        this.userRole = userRole;
        initComponents();
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        lb_thuoc_name = new javax.swing.JTextField();
        lb_don_vi = new javax.swing.JTextField();
        lb_so_luong = new javax.swing.JTextField();
        lb_gia_tien = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        btn_add = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        display_thuoc = new javax.swing.JTextArea();
        jLabel6 = new javax.swing.JLabel();
        btn_refresh = new javax.swing.JButton();
        lb_thuoc_input = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        btn_delete = new javax.swing.JButton();
        btn_check_sl = new javax.swing.JButton();
        btn_back = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        jLabel1.setText("KHO THUỐC");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel2.setText("Tên thuốc");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel3.setText("Đơn vị");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel4.setText("Số lượng");

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel5.setText("Giá tiền");

        btn_add.setBackground(new java.awt.Color(0, 153, 255));
        btn_add.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btn_add.setText("Thêm thuốc");
        btn_add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_addActionPerformed(evt);
            }
        });

        display_thuoc.setColumns(20);
        display_thuoc.setRows(5);
        jScrollPane1.setViewportView(display_thuoc);

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel6.setText("Danh sách");

        btn_refresh.setBackground(new java.awt.Color(0, 153, 255));
        btn_refresh.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btn_refresh.setText("Refresh");
        btn_refresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_refreshActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel7.setText("Điền tên thuốc");

        btn_delete.setBackground(new java.awt.Color(0, 153, 255));
        btn_delete.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btn_delete.setText("Xóa thuốc");
        btn_delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_deleteActionPerformed(evt);
            }
        });

        btn_check_sl.setBackground(new java.awt.Color(0, 153, 255));
        btn_check_sl.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btn_check_sl.setText("Kiểm tra số lượng");
        btn_check_sl.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_check_slActionPerformed(evt);
            }
        });

        btn_back.setBackground(new java.awt.Color(0, 153, 255));
        btn_back.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btn_back.setText("Back");
        btn_back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_backActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lb_thuoc_name, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lb_gia_tien))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lb_don_vi, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lb_so_luong, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel4))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 49, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(lb_thuoc_input, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(btn_delete, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jLabel7))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(114, 114, 114)
                        .addComponent(btn_add, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 292, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(53, 53, 53))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_refresh)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btn_back, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(22, 22, 22))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btn_check_sl)
                .addGap(131, 131, 131))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btn_back, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(btn_refresh)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 289, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_check_sl, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(29, 29, 29)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lb_thuoc_name, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addGap(5, 5, 5)
                                .addComponent(lb_don_vi, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addGap(1, 1, 1)
                                .addComponent(lb_so_luong, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addGap(1, 1, 1)
                                .addComponent(lb_gia_tien, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addComponent(btn_add, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(41, 41, 41)
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lb_thuoc_input, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btn_delete, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_addActionPerformed
        String name = lb_thuoc_name.getText().trim();
        String unit = lb_don_vi.getText().trim();
        String quantityStr = lb_so_luong.getText().trim();
        String priceStr = lb_gia_tien.getText().trim();

        if (name.isEmpty() || unit.isEmpty() || quantityStr.isEmpty() || priceStr.isEmpty()) {
            javax.swing.JOptionPane.showMessageDialog(this, "Vui lòng nhập đầy đủ thông tin!");
            return;
        }

        try {
            int quantity = Integer.parseInt(quantityStr);
            double price = Double.parseDouble(priceStr);

            try (Connection conn = DBConnect.DatabaseConnection.getJDBConnection()) {
                String sql = "INSERT INTO medicines (medicine_name, unit, quantity, price) VALUES (?, ?, ?, ?)";
                try (java.sql.PreparedStatement stmt = conn.prepareStatement(sql, java.sql.Statement.RETURN_GENERATED_KEYS)) {
                    stmt.setString(1, name);
                    stmt.setString(2, unit);
                    stmt.setInt(3, quantity);
                    stmt.setDouble(4, price);

                    int rows = stmt.executeUpdate();
                    if (rows > 0) {
                        // Lấy medicine_id vừa thêm
                        try (java.sql.ResultSet rs = stmt.getGeneratedKeys()) {
                            if (rs.next()) {
                                int id = rs.getInt(1); // medicine_id

                                javax.swing.JOptionPane.showMessageDialog(this, "Thêm thuốc thành công!");
                                display_thuoc.append("ID: " + id + "\nTên thuốc: " + name + "\nĐơn vị: " + unit
                                        + "\nSố lượng: " + quantity + "\nGiá tiền: " + price + "\n-----------------------\n");
                            }
                        }

                        // Xoá input sau khi thêm
                        lb_thuoc_name.setText("");
                        lb_don_vi.setText("");
                        lb_so_luong.setText("");
                        lb_gia_tien.setText("");
                    }
                }
            }
        } catch (NumberFormatException e) {
            javax.swing.JOptionPane.showMessageDialog(this, "Số lượng hoặc giá tiền không hợp lệ!");
        } catch (HeadlessException | SQLException e) {
            javax.swing.JOptionPane.showMessageDialog(this, "Lỗi khi thêm thuốc vào cơ sở dữ liệu!");
        }
    }//GEN-LAST:event_btn_addActionPerformed

    private void btn_refreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_refreshActionPerformed
        display_thuoc.setText(""); // Xóa nội dung cũ trước khi load mới

        try (Connection conn = DBConnect.DatabaseConnection.getJDBConnection()) {
            String sql = "SELECT * FROM medicines";
            try (java.sql.PreparedStatement stmt = conn.prepareStatement(sql); java.sql.ResultSet rs = stmt.executeQuery()) {

                while (rs.next()) {
                    int id = rs.getInt("medicine_id");
                    String name = rs.getString("medicine_name");
                    String unit = rs.getString("unit");
                    int quantity = rs.getInt("quantity");
                    double price = rs.getDouble("price");

                    display_thuoc.append("ID: " + id + "\nTên thuốc: " + name + "\nĐơn vị: " + unit
                            + "\nSố lượng: " + quantity + "\nGiá tiền: " + price + "\n-----------------------\n");
                }
            }
        } catch (SQLException e) {
            javax.swing.JOptionPane.showMessageDialog(this, "Lỗi khi tải danh sách thuốc!");
        }
    }//GEN-LAST:event_btn_refreshActionPerformed

    private void btn_deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_deleteActionPerformed
        String nameToDelete = lb_thuoc_input.getText().trim();

        if (nameToDelete.isEmpty()) {
            javax.swing.JOptionPane.showMessageDialog(this, "Vui lòng nhập tên thuốc cần xóa!");
            return;
        }

        // Hỏi xác nhận trước khi xóa
        int confirm = javax.swing.JOptionPane.showConfirmDialog(
                this,
                "Bạn có chắc chắn muốn xóa thuốc \"" + nameToDelete + "\" không?",
                "Xác nhận xóa",
                javax.swing.JOptionPane.YES_NO_OPTION
        );

        if (confirm != javax.swing.JOptionPane.YES_OPTION) {
            return; // Người dùng chọn Không => không xóa
        }

        try (Connection conn = DBConnect.DatabaseConnection.getJDBConnection()) {
            String sql = "DELETE FROM medicines WHERE medicine_name = ?";
            try (java.sql.PreparedStatement stmt = conn.prepareStatement(sql)) {
                stmt.setString(1, nameToDelete);
                int rows = stmt.executeUpdate();
                if (rows > 0) {
                    // Kiểm tra xem còn thuốc nào không
                    String countSql = "SELECT COUNT(*) FROM medicines";
                    try (java.sql.Statement countStmt = conn.createStatement(); java.sql.ResultSet rs = countStmt.executeQuery(countSql)) {
                        if (rs.next()) {
                            int count = rs.getInt(1);
                            if (count == 0) {
                                // Reset AUTO_INCREMENT nếu không còn thuốc nào
                                String resetSql = "ALTER TABLE medicines AUTO_INCREMENT = 1";
                                try (java.sql.Statement resetStmt = conn.createStatement()) {
                                    resetStmt.executeUpdate(resetSql);
                                }
                            }
                        }
                    }

                    javax.swing.JOptionPane.showMessageDialog(this, "Đã xóa thuốc \"" + nameToDelete + "\" thành công!");
                    lb_thuoc_input.setText("");
                    btn_refresh.doClick(); // Tự động làm mới danh sách sau khi xóa
                } else {
                    javax.swing.JOptionPane.showMessageDialog(this, "Không tìm thấy thuốc tên \"" + nameToDelete + "\"!");
                }
            }
        } catch (SQLException e) {
            javax.swing.JOptionPane.showMessageDialog(this, "Lỗi khi xóa thuốc khỏi cơ sở dữ liệu!");
            e.printStackTrace();
        }

    }//GEN-LAST:event_btn_deleteActionPerformed

    private void btn_check_slActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_check_slActionPerformed
        display_thuoc.setText(""); // Xóa nội dung cũ

        try (Connection conn = DBConnect.DatabaseConnection.getJDBConnection()) {
            String sql = "SELECT * FROM medicines WHERE quantity < 10";
            try (java.sql.PreparedStatement stmt = conn.prepareStatement(sql); java.sql.ResultSet rs = stmt.executeQuery()) {

                boolean hasLowStock = false;
                StringBuilder warning = new StringBuilder("Các thuốc sắp hết hàng (số lượng < 10):\n");

                hasLowStock = true;
                while (rs.next()) {
                    int id = rs.getInt("medicine_id");
                    String name = rs.getString("medicine_name");
                    String unit = rs.getString("unit");
                    int quantity = rs.getInt("quantity");
                    double price = rs.getDouble("price");

                    warning.append("ID: ").append(id)
                            .append("\nTên thuốc: ").append(name)
                            .append("\nĐơn vị: ").append(unit)
                            .append("\nSố lượng: ").append(quantity)
                            .append("\nGiá tiền: ").append(price)
                            .append("\n-----------------------\n");
                }

                if (hasLowStock) {
                    javax.swing.JOptionPane.showMessageDialog(this, warning.toString(), "Cảnh báo", javax.swing.JOptionPane.WARNING_MESSAGE);
                    display_thuoc.setText(warning.toString());
                } else {
                    javax.swing.JOptionPane.showMessageDialog(this, "Tất cả thuốc đều còn đủ số lượng!", "Thông báo", javax.swing.JOptionPane.INFORMATION_MESSAGE);
                }
            }
        } catch (SQLException e) {
            javax.swing.JOptionPane.showMessageDialog(this, "Lỗi khi kiểm tra số lượng thuốc!", "Lỗi", javax.swing.JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btn_check_slActionPerformed

    private void btn_backActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_backActionPerformed
        this.dispose(); // đóng cửa sổ hiện tại
        if (parent != null) {
            parent.setVisible(true); // mở lại form letan
        }

        switch (userRole.toLowerCase()) {
            case "admin" -> {
                if (parent != null) {
                    parent.setVisible(true);
                } else {
                    new admin(userCode).setVisible(true);
                }
            }

            case "doctor" -> {
                if (parent != null) {
                    parent.setVisible(true);
                } else {
                    new doctor(userCode).setVisible(true);
                }
            }

            case "letan" -> {
                if (parent != null) {
                    parent.setVisible(true);
                } else {
                    new letan(userCode).setVisible(true);
                }
            }
            default -> {
                if (parent != null) {
                    parent.setVisible(true);
                }
            }
        }
    }//GEN-LAST:event_btn_backActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ManageMedicines.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ManageMedicines.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ManageMedicines.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ManageMedicines.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new ManageMedicines().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_add;
    private javax.swing.JButton btn_back;
    private javax.swing.JButton btn_check_sl;
    private javax.swing.JButton btn_delete;
    private javax.swing.JButton btn_refresh;
    private javax.swing.JTextArea display_thuoc;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField lb_don_vi;
    private javax.swing.JTextField lb_gia_tien;
    private javax.swing.JTextField lb_so_luong;
    private javax.swing.JTextField lb_thuoc_input;
    private javax.swing.JTextField lb_thuoc_name;
    // End of variables declaration//GEN-END:variables
}
